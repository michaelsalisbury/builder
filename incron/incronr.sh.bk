#!/bin/bash

function main(){
	# Read switches for rapper script
	switches "$@"
	shift $?

	# Set global variables
	incronRapperFQFN=$(readlink -nf "$BASH_SOURCE")
	incronRapperEscaped=$(ls -1 -d --quoting-style=escape "${incronRapperFQFN}")
	incronRapperName=$(basename "$incronRapperFQFN")
	incronRapperPath=$(dirname  "$incronRapperFQFN")


	if ${recursive:-false}; then
		process_recursive_tree_entry "$@"
	else
		if [ -e "$1" ]; then
			cmdFQFN=$(readlink -fn "$1") && shift
			cmdName=$(basename "$cmdFQFN")
			cmdPath=$(dirname  "$cmdFQFN")

			${first_run:-true} && setup_recursive_tree_entries
			/bin/bash "${cmdFQFN}" "$@"

		fi
	fi
}
###########################################################################################
###########################################################################################
function process_recursive_tree_entry(){
	
	



	
	cat << END-OF-LOG >> /var/log/incron_test.log
RECURSIVE #> recursiveFQFN  :: ${recursiveFQFN}
RECURSIVE #> recursiveFQFNE :: ${recursiveFQFNEscaped}
RECURSIVE #>             \$@ :: $@

END-OF-LOG
}
function setup_recursive_tree_entries(){
	local cmdEscaped=$(ls -1 -d --quoting-style=escaped "${cmdFQFN}")

	local IFS=':'
	local -a sourceConf=( $(
			tac /var/log/syslog					| \
			egrep -m1 "incrond\[[0-9]*]:.*CMD..${cmdEscaped}"	| \
			sed 's/^[^(]*(\([^:]*\)::\([^)]*\)).*/\1:\2/'
		) )

	case ${sourceConf[0]} in
		system)	local sourceFQFN="/etc/incron.d/${sourceConf[1]}"
			;;
	esac

	local -a eventConf=( $(
		egrep "${cmdEscaped}" "${sourceFQFN}" | \
		sed 's/ \(IN_[^ ]*\) /:\1:/'
		) )

	unset IFS


	case ${sourceConf[0]} in
		system) local recursiveCMD="/etc/incron.d/recursive-${eventConf[0]//\//$'\\\\'}-CMD.conf"
			local recursiveMON="/etc/incron.d/recursive-${eventConf[0]//\//$'\\\\'}-MON.conf"

			touch "${recursiveCMD}"
			touch "${recursiveMON}"

			local eventPathEscaped=""
			while read eventPathEscaped; do
				echo	${eventPathEscaped}	\
					IN_CREATE,IN_DELETE	\
					${incronRapperEscaped}	\
					-r "${eventConf[0]}"	\
					\$% \$@/\$#		\
				>> "${recursiveMON}"
			done < <(find "${eventConf[0]//\\/}" -type d -exec ls -1 -d --quoting-style=escape {} \; | \
				sed 's/\\/\\\\/g' | \
				sort)


			;;
	esac



	cat << END-OF-LOG >> /var/log/incron_test.log
       cmdFQFN :: ${cmdFQFN}

num sourceConf :: ${#sourceConf[@]}
    sourceConf :: 0 - ${sourceConf[0]}
    sourceConf :: 1 - ${sourceConf[1]}

num eventConf :: ${#eventConf[@]}
    eventConf :: 0 - ${eventConf[0]}
    eventConf :: 1 - ${eventConf[1]}
    eventConf :: 2 - ${eventConf[2]}

$(find "${eventConf[0]//\\/}" -type d -exec ls -1 -d --quoting-style=escape {} \; | sort)


END-OF-LOG

}

#$(find ${eventConf[0]} -type d -exec ls -1 -d --quoting-style=escape {} \; | sort)

###########################################################################################
###########################################################################################
function switches(){
        local OPTIND=
        local OPTARG=
        while getopts "hr:" OPTION
               do case $OPTION in
			h)      echo_help; exit 1;;
			s)	first_run=false;;
			r)	recursive=true
				recursiveFQFN=$OPTARG
				recursiveFQFNEscaped=$(ls -1 -d --quoting-style=escape "${OPTARG}");;
                        ?)      ;;
                esac
        done
        return $(($OPTIND - 1))
}
function echo_help(){
	cat << END-OF-HELP
---------------------------------------------------------------
-v "regex filter for package version"
-e "extend the search text and decrement till a match is found"
---------------------------------------------------------------
USAGE
apt_search [-v "filter"] [-e "extended package name"] "package name"
END-OF-HELP
}
function echo_switches(){
	echo -----------------------------------------
	echo "$@"
	echo 1 :: "$1"
	echo 2 :: "$2"
	echo 3 :: "$3"
	echo 4 :: "$4"
	echo 5 :: "$5"
	echo 6 :: "$6"
	echo 7 :: "$7"
	echo 8 :: "$8"
	echo 9 :: "$9"
	echo -----------------------------------------
}
###########################################################################################
###########################################################################################
main "$@"

