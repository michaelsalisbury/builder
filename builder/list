#!/bin/bash

function main(){

	import test.sh

}
function import(){
	local scriptFQFN=$(readlink -nf "$1")
	local scriptPATH=$(dirname "${scriptFQFN}")
	local include_line=""
	local include_file=""
	while read include_line; do
		# escape all spaces in include line; this keeps include entries clean and free of quotes
		include_line=${include_line// /\"\ \"}
		# if the include line does not start with a leading slash then it's relative to the location of the passed script file
		if [ "${include_line:0:1}" != "/" ]; then
			include_line=${scriptPATH}/${include_line}
		fi
		#echo ${include_line}
		#continue 
		
		while read include_file; do
			if [ -f "${include_file}" ]; then
				if sed "${include_file}" -e '1p;d' | grep -q "^#!/bin/builder"; then
					
					echo BUILDER :: ${include_file}
				elif sed "${include_file}" -e '1p;d' | grep -q "^#!/bin/bash"; then
					echo ___BASH :: ${include_file}
				else
					echo ___FILE :: ${include_file}
				fi
			else
				echo ___COLD :: ${include_file}
			fi
		# use the find command to expand the include line and list all the matching files
		done < <(eval find "${include_line}" -type f -maxdepth 0 2> /dev/null)
	# parse the passed script file for a function called "includes"
	done < <(sed "${scriptFQFN}" -e '/^function includes/,/^}/p;d' | sed '1d;$d')
}
main "$@"
