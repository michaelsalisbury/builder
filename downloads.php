<?php

///////////Counter Stuff///////////////
$filename = "files/counter";
$handle = fopen($filename, 'r+') or die ("Can't open file'");
$curr = fgets($handle);
fseek($handle, 0);
$next= (int)$curr+1;
fwrite($handle, $next);
fclose($handle);


$kickhandle=fopen("files/ks.cfg", "w") or die ("can't open ks file");

///////////////////////////////////

$content = <<<KSCONTENT
#Generated by Kickstart Configurator
#platform=AMD64 or Intel EM64T

#System language
lang en_US
#Language modules to install
langsupport ar_EG --default=en_US
#System keyboard
keyboard us
#System mouse
mouse
#System timezone
timezone Africa/Cairo
#Root password
rootpw --disabled
#Initial user
user bee$next --fullname "Bee$next" --password bee{$next}bee{$next}
#Reboot after installation
reboot
#Use text mode install
text
#Install OS instead of upgrade
install
#Use Web installation
url --url http://192.168.1.1/ubuntu/
#System bootloader configuration
bootloader --location=mbr
#Clear the Master Boot Record
zerombr yes
#Partition clearing information
clearpart --all --initlabel
#Disk partitioning information
part / --fstype ext4 --size 4096
part swap --size 2048
part /dfs --fstype ext4 --size 1 --grow
#System authorization infomation
auth  --useshadow  --enablemd5


network --bootproto=static --ip=192.168.1.$next --gateway=192.168.1.1 --netmask 255.255.255.0 --nameserver=192.168.1.1 --device=eth0 --hostname=bee$next.gbeehive


#Firewall configuration
firewall --disabled
#Do not configure the X Window System
skipx


%packages
ssh
apache2
mysql-server-5.1
%post

######### Adding user with our custom group ##########

useradd -m -p `perl -e 'print crypt("bee{$next}bee$next", "obba")'` bee$next
chfn -f "A BEE" bee$next
usermod -G adm,dialout,cdrom,sudo,plugdev -s /bin/bash bee$next

######################################################

################ Node Configuration ###############

wget http://192.168.1.1/files/sudoers -O /etc/sudoers
mkdir /home/bee$next/.ssh/
wget http://192.168.1.1/files/id_rsa.pub -O /home/bee$next/.ssh/authorized_keys
wget http://192.168.1.1/files/resolv.conf -O /etc/resolv.conf
chown -R bee$next:bee$next /home/bee$next/.ssh
### UPDATE APT and Install Java ###

### Fetch the new sources.list
wget http://192.168.1.1/files/sources.list -O /etc/apt/sources.list
apt-get update

### Accept DLJ and install Java
echo sun-java6-jre shared/accepted-sun-dlj-v1-1 select true | /usr/bin/debconf-set-selections

apt-get --yes --force-yes install sun-java6-jre


############## HADOOP CONFIGURATION ################

addgroup hadoop
useradd -m -p `perl -e 'print crypt("hadoop","obba")'` -g hadoop hadoop
usermod -s /bin/bash hadoop
mkdir /home/hadoop/.ssh/



### HADOOP PERMISSIONS ###

wget http://192.168.1.1/files/id_rsa_hadoop.pub -O /home/hadoop/.ssh/authorized_keys
wget http://192.168.1.1/files/id_rsa.pub -O - >> /home/hadoop/.ssh/authorized_keys

ssh-keygen -t rsa -f /home/hadoop/.ssh/id_rsa -P ""
cat /home/hadoop/.ssh/id_rsa.pub >> /home/hadoop/.ssh/authorized_keys

echo "StrictHostKeyChecking no" >> /etc/ssh/ssh_config

chown -R hadoop:hadoop /home/hadoop/.ssh



### HADOOP INSTALLATION ###

wget http://192.168.1.1/files/hadoop-0.20.2.tar.gz -O /home/hadoop/hadoop-0.20.2.tar.gz
tar -C /home/hadoop -xzf /home/hadoop/hadoop-0.20.2.tar.gz
cp -r /home/hadoop/hadoop-0.20.2 /usr/local/hadoop
mkdir /dfs/datastore
wget http://192.168.1.1/files/disable_ipv6 -O - >> /etc/sysctl.conf


chown -R hadoop:hadoop /dfs
chown -R hadoop:hadoop /usr/local/hadoop


### HBASE INSTALLATION ###

wget http://192.168.1.1/files/hbase.tar.gz -O /home/hadoop/hbase.tar.gz
tar -C /home/hadoop/ -xzf /home/hadoop/hbase.tar.gz
cp -r /home/hadoop/hbase /usr/local/
chown -R hadoop:hadoop /usr/local/hbase/
echo "hadoop  -       nofile  32768" >> /etc/security/limits.conf
echo "session required  pam_limits.so" >> /etc/pam.d/common-session



### cassandra INSTALLTION ###
wget http://192.168.1.1/files/cassandra-configured.tar.gz -O /home/hadoop/cassandra.tar.gz
tar -C /usr/local/ -xzf /home/hadoop/cassandra.tar.gz
chown -R hadoop:hadoop /usr/local/cassandra
mkdir /var/log/cassandra
chown -R hadoop:hadoop /var/log/cassandra
mkdir /var/lib/cassandra
chown -R hadoop:hadoop /var/lib/cassandra
mkdir -p /dfs/cassandra/data
chown -R hadoop:hadoop /dfs/cassandra
echo "export PATH=\$PATH:/usr/local/cassandra/bin" >> /home/hadoop/.profile

ntpdate 192.168.1.1

### Memcached ###

#Memcached is fetched from local repository

apt-get --yes --force-yes install memcached
wget http://192.168.1.1/files/memcached -O /etc/default/memcached

################################################

KSCONTENT;

fwrite($kickhandle, $content);

fclose($kickhandle);



?>
<?php

// place this code inside a php file and call it f.e. "download.php"
$path = $_SERVER['DOCUMENT_ROOT']."/files/ks.cfg"; // change the path to fit your websites document structure
$fullPath = $path.$_GET['download_file'];

if ($fd = fopen ($fullPath, "r")) {
    $fsize = filesize($fullPath);
    $path_parts = pathinfo($fullPath);
    $ext = strtolower($path_parts["extension"]);

        header("Content-type: text/plain");
        header("Content-Disposition: filename=\"".$path_parts["basename"]."\"");

    header("Content-length: $fsize");
    header("Cache-control: private"); //use this to open files directly
    while(!feof($fd)) {
        $buffer = fread($fd, 2048);
        echo $buffer;
    }
}
fclose ($fd);
exit;
// example: place this kind of link into the document where the file download is offered:
// <a href="download.php?download_file=some_file.pdf">Download here</a>

?>
