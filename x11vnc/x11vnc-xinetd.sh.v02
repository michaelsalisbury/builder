#!/bin/bash
#https://wiki.archlinux.org/index.php/X11vnc

LOG=/var/log/x11vnc.helper

function main(){
	echo -------------------------------------------------------- `date "+%Y.%m.%d-%T"`
	#env
	rfbauth_passwd_file=/etc/x11vnc/passwd

	# enter into array "auth_array" the xauth display sockets sorted by newest first
	IFS=$'\n' read -d $'' -a auth_array < <(ls -tc /var/run/gdm/*/database)
	
	# log "auth_array" socket list
	for auth in "${auth_array[@]}"; do echo gdmDB $(( auth_count++ )) : ${auth}; done

	# get the name of the user logged into DISPLAY :0
	local user_logged_into_DISPLAY0=$(who -u | awk '/tty7.*\(:0/{print $1}')

	# smash the screensaver if a user is logged in to DISPLAY :0
	if [ -n "${user_logged_into_DISPLAY0}" ]; then
		su ${user_logged_into_DISPLAY0} \
			-c "DISPLAY=:0 gnome-screensaver-command -d"
	fi
	
	echo srvARGS : "$@"

	echo x11PID :: $$
	echo x11PPID : $PPID
	echo x11prog : $(basename "${BASH_SOURCE}")

	# get sockets
	local ock='\([0-9\.]\+:[0-9]\+\)'	# sed socket filter
	local p='[[:space:]]'			# sed white space key
	# "/,$$,/s/.*[[:s:]]\([0-9\.]\+:[0-9]\+\)[[:s:]]*\([0-9\.]\+:[0-9]\+\)[[:s:]].*/p;d"
	local -a sockets=($(ss -np | sed "/,$$,/s/.*$p$ock$p*$ock$p.*/\1 \2/p;d"))
	
	# get connecting pid
	local srcPID=$(\
		ss -n -p src ${sockets[1]} |\
		sed 's/.*[[:space:]]\+users:(("[[:graph:]]\+",\([0-9]*\),.*/\1/p;d')

	# get connecting ppid
	local srcPPID=$(ps --no-heading -o ppid -p ${srcPID})

	# get connecting userID
	local srcUID=$(ps --no-heading -o uid -p ${srcPID})
	
	# get connecting username
	local srcUSER=$(ps --no-heading -o user -p ${srcPID})

	echo s sock :: ${sockets[0]}
	echo d sock :: ${sockets[1]}
	
	echo x11PID :: $$ and $PPID
	echo srcPID :: ${srcPID}
	echo srcPPID : ${srcPPID}
	echo srcUID :: ${srcUID}
	echo srcUSER : ${srcUSER}

	# parse args for users and groups and add then to array "users"
	IFS=$'\n' read -d $'' -a users < <(
		for name in "$@"; do
			awk -F: -v NAME="${name}" \
				'$0~"^"NAME {
					NAME=""
					sub(/(^[, ]*|[, ]*$)/,"",$4)
					gsub(",","\n",$4)
					printf ($4==""?$1:$4)
					exit
				}END{
					printf NAME"\n"
				}' \
			/etc/group
		done)
	# join user array by comma
	local users=$(IFS=,; echo "${users[*]}")

	# log userlist
	echo srvARGS : ${users}

	# if connecting user and local user match than jump in

	# if no users are logged on then jump in

	# if users belong to wheel or are root then jump in

	local dlgOPTS=(
		--info
		--title="data"
		--text=\"hello in the sun\"
	)
	local dlgOPTS=(
		--question
		--ok-label=\"Allow\"
		--cancel-label=\"NO\"
		--title=\"Remote user attempting connection ALLERT\"
		--text=\"User \\\"${srcUSER}\\\" wants to share your desktop\"
	)

	echo dlgOPTS :: ${dlgOPTS[@]}
	/bin/su ${srcUSER} -c "DISPLAY=:0 zenity ${dlgOPTS[*]}"
	local dlgDATA=$?
	echo dlgDATA :: ${dlgDATA}
	if (( dlgDATA > 0 )); then
		echo EXITING\!\!\! User \"${user_logged_into_DISPLAY0}\" said NO\!
		exit ${dlgDATA}
	fi

	# start x11vnc socket on localhost
	/usr/bin/x11vnc				\
		-bg				\
		-o /var/log/x11vnc.log		\
		-accept /bin/true		\
		-gone /bin/true			\
		-noxdamage			\
		-inetd				\
		-display :0			\
		-auth ${auth_array[0]}		\
		-nopw
		#-unixpw
		#-many
		#-forever
		#-xdmsvc
		#-unixpw ${users}
		#-unixpw_system_greeter
		#-rfbauth ${rfbauth_passwd_file}

		
		#-localhost
		#-nopw
		#-auth /var/gdm/:0.Xauth
		#-accept /etc/x11vnc/accept
		#-gone /etc/x11vnc/accept
}
main "$@" 2>&1 >> "${LOG}"
